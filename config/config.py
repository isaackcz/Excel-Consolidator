"""
Configuration file for Excel Consolidator

This file contains configuration settings for error reporting and auto-updates.
Auto-generated by setup_features.py
"""

# Error Reporting Configuration - Google Sheets
ERROR_REPORTING_ENABLED = True
GOOGLE_SPREADSHEET_ID = "1eipG_5UgnkvQGcxpQi48fAq2ZRF_ZjtNzsliVdNkEnU"
GOOGLE_SHEET_NAME = "Error Log"

# Google Apps Script URL (optional - set this after deploying the Apps Script)
GOOGLE_APPS_SCRIPT_URL = "https://script.google.com/macros/s/AKfycbwu2ZavZw0_TXEFzLrF5t-rIt8BbWWbBtdc3ANZ5xK_l9GvigVxVgELTZNeaDxhGVyjSw/exec"

# Legacy email settings (kept for compatibility, but not used)
ERROR_REPORT_EMAIL = "isaacrita.02@gmail.com"
ERROR_REPORT_SENDER = "isaacrita.02@gmail.com"
ERROR_REPORT_SENDER_PASSWORD = "Paraklitus"
SMTP_SERVER = "smtp.gmail.com"
SMTP_PORT = 587

# Auto-Update Configuration
AUTO_UPDATE_ENABLED = True
GITHUB_OWNER = "isaackcz"
GITHUB_REPO = "Excel-Consolidator-App"
UPDATE_CHECK_INTERVAL = 24 * 60 * 60  # Check every 24 hours (in seconds)

# Application Configuration
APP_NAME = "Excel Consolidator"
APP_VERSION = "1.0.5"
APP_DESCRIPTION = "Advanced Excel file consolidation tool"

# Logging Configuration
LOG_LEVEL = "INFO"  # DEBUG, INFO, WARNING, ERROR
LOG_TO_FILE = True
LOG_TO_CONSOLE = True

# Configuration functions
def get_smtp_config():
    """Get SMTP configuration for error reporting."""
    return {
        "server": SMTP_SERVER,
        "port": SMTP_PORT,
        "sender_email": ERROR_REPORT_SENDER,
        "sender_password": ERROR_REPORT_SENDER_PASSWORD,
        "recipient_email": ERROR_REPORT_EMAIL
    }

def get_github_config():
    """Get GitHub configuration for auto-updates."""
    return {
        "owner": GITHUB_OWNER,
        "repo": GITHUB_REPO,
        "check_interval": UPDATE_CHECK_INTERVAL
    }

def get_app_config():
    """Get application configuration."""
    return {
        "name": APP_NAME,
        "version": APP_VERSION,
        "description": APP_DESCRIPTION,
        "error_reporting_enabled": ERROR_REPORTING_ENABLED,
        "auto_update_enabled": AUTO_UPDATE_ENABLED
    }

# Validation function
def validate_config():
    """Validate configuration settings."""
    errors = []
    
    if ERROR_REPORTING_ENABLED:
        if not ERROR_REPORT_SENDER_PASSWORD or ERROR_REPORT_SENDER_PASSWORD == "your_app_password_here":
            errors.append("ERROR_REPORT_SENDER_PASSWORD must be set to your Gmail App Password")
        
        if not ERROR_REPORT_SENDER or ERROR_REPORT_SENDER == "isaacrita.02@gmail.com":
            errors.append("ERROR_REPORT_SENDER should be updated to your email address")
    
    if AUTO_UPDATE_ENABLED:
        if not GITHUB_OWNER or GITHUB_OWNER == "your_username":
            errors.append("GITHUB_OWNER must be set to your GitHub username")
        
        if not GITHUB_REPO or GITHUB_REPO == "excel-consolidator":
            errors.append("GITHUB_REPO must be set to your repository name")
    
    return len(errors) == 0, errors

if __name__ == "__main__":
    # Validate configuration when run directly
    is_valid, errors = validate_config()
    
    if is_valid:
        print("✅ Configuration is valid!")
        print(f"App: {APP_NAME} v{APP_VERSION}")
        print(f"Error Reporting: {'Enabled' if ERROR_REPORTING_ENABLED else 'Disabled'}")
        print(f"Auto-Update: {'Enabled' if AUTO_UPDATE_ENABLED else 'Disabled'}")
    else:
        print("❌ Configuration has errors:")
        for error in errors:
            print(f"  - {error}")
        print("\nPlease update the configuration values in this file.")
